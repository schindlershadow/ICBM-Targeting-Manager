os.loadAPI("monapi")
os.loadAPI("papi")

function canLaunch(launchers)
  canLaunch = true
  for i=1,#launchers do
    if peripheral.call(launchers[i],"canLaunch") == false then
      canLaunch = false
    end
  end
  return canLaunch
end

function launch(launchers)
  for i=1,#launchers do
    peripheral.call(launchers[i],"launch")
  end
end

function setTarget(launchers,x,y,z)
  for i=1,#launchers do
    peripheral.call(launchers[i],"setTarget",x,y,z)
  end
end

function getTarget(launchers)
  x = 0
  y = 0
  z = 0
  list = {}
  x,y,z = peripheral.call(launchers[1],"getTarget")  
  setTarget(launchers,x,y,z)
  return x,y,z
end

function getMissile(launchers)
  list = {}
  for i=1,#launchers do
    --print(peripheral.call(launchers[i],"getMissile"))
    table.insert(list,peripheral.call(launchers[i],"getMissile"))
  end
  return list
end

function set(x,y)
  mon.setCursorPos(x,y)
end

function color(color)
  mon.setBackgroundColor(color)
end

function write(string)
  mon.write(string)
end

function draw(str1,str2,str3,str4)
  x,y = monapi.getSize()
  xPos = 0
  yPos = 0
  red = colors.red
  blue = colors.blue
  color(red)
  mon.clear()
  color(blue)
  
  for i=1,x do
    for z=1,y do
      if (i > x/2 and z > y/2) or (i < x/2 and z < y/2) then
        set(i,z)
        write(" ")
      end   
    end
  end
  
  set(x/4-4,y/4)
  write(str1)
  color(red)
  set(x*(3/4)-4,y/4)
  write(str3)
  set(x/4-4,y*(3/4))
  write(str2)
  color(blue)
  set(x*(3/4)-4,y*(3/4))
  write(str4)
  
  xPos, yPos = getInput()
  
  if xPos <= x/2 and yPos <= y/2 then
    return 1
  end
  if xPos >= x/2 and yPos <= y/2 then
    return 3
  end
  if xPos <= x/2 and yPos >= y/2 then
    return 2
  end
  if xPos >= x/2 and yPos >= y/2 then
    return 4
  end

end

function getInput()
  event, side, xPos, yPos = os.pullEvent("monitor_touch")
  return xPos, yPos
end

function drawYesNo(string)
  mon.clear()
  x,y = monapi.getSize()
  xPos = 0
  yPos = 0
  set(x/4,y/4)
  if type(string) == "table" then
    for i=1,#string do
      write(i.." "..string[i])
      set(x/8,i+y/8)
    end
  else
    write(string)
  end

  
  color(colors.red)
  for i=1,x do
    for z=1,y do
      if i <=x/2 and z >= y*(3/4) then
        set(i,z)
        write(" ")
      end
    end
  end
  
  set(x/4-2,y*(7/8))
  write("YES")
  color(colors.blue)
  set(x*(3/4)-1,y*(7/8))
  write("NO")
  
  event, side, xPos, yPos = os.pullEvent("monitor_touch")
  if xPos <= x/2 and yPos >= y*(3/4) then
    return true
  else
    return false
  end
end

function info(string)
  mon.clear()
  x,y = monapi.getSize()
  xPos = 0
  yPos = 0
  set(x/8,y/8)
  if type(string) == "table" then
    for i=1,#string do
      write(i.." "..string[i])
      set(x/8,i+y/8)
    end
  else
    write(string)
  end
  set(x/2-3,y*(7/8))
  write("Close")
  os.pullEvent("monitor_touch")
  
end

function numpad(string)
  x,y = monapi.getSize()
  xPos2 = 0
  yPos2 = 0
  input = ""
  ok = false
  neg = false
  
  while ok == false do
    mon.clear()
    set(2,2)
    color(colors.blue)
    write(string)
    set(2,3)
    color(colors.red)
    if neg then
      write("-"..input)
    else
      write(input)
    end
    color(colors.blue)
    set(2,5)
    write(" 7    8    9 ")
    set(2,7)
    write(" 4    5    6 ")
    set(2,9)
    write(" 1    2    3 ")
    set(2,11)
    write(" +    0    - ")
    set(2,13)
    write(" <-       OK ")
  
    event, side, xPos2, yPos2 = os.pullEvent("monitor_touch")
    --print(xPos2.." "..yPos2)
    --print(input)
    if yPos2 == 5 then
      if xPos2 == 1+2 then
        input = input.."7"
      end
      if xPos2 == 1+7 then
        input = input.."8"
      end
      if xPos2 == 1+12 then
        input = input.."9"
      end
    end
    if yPos2 == 7 then
      if xPos2 == 1+2 then
        input = input.."4"
      end
      if xPos2 == 1+7 then
        input = input.."5"
      end
      if xPos2 == 1+12 then
        input = input.."6"
      end
    end
    if yPos2 == 9 then
      if xPos2 == 1+2 then
        input = input.."1"
      end
      if xPos2 == 1+7 then
        input = input.."2"
      end
      if xPos2 == 1+12 then
        input = input.."3"
      end

    end
    if yPos2 == 11 then
      if xPos2 == 1+2 then
        neg = false
      end
      if xPos2 == 1+7 then
        input = input.."0"
      end
      if xPos2 == 1+12 then
        neg = true
      end

    end
    if yPos2 == 13 then
      if xPos2 == 1+2 or xPos2 == 1+3 then
        input = input:sub(1, #input - 1)
      end
      if xPos2 == 1+10 or xPos2 == 1+11 then
        ok = true
      end

    end
  end
  input = tonumber(input)
  if neg then
    input = 0 - input
  end
  return input
end


